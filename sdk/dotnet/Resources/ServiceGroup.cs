// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Xyz.Resources
{
    [XyzResourceType("xyz:resources:ServiceGroup")]
    public partial class ServiceGroup : global::Pulumi.CustomResource
    {
        [Output("icmp")]
        public Output<ImmutableArray<Outputs.ServiceGroupIcmp>> Icmp { get; private set; } = null!;

        [Output("icmp6")]
        public Output<ImmutableArray<Outputs.ServiceGroupIcmp>> Icmp6 { get; private set; } = null!;

        [Output("serviceGroupId")]
        public Output<int> ServiceGroupId { get; private set; } = null!;

        [Output("tcp")]
        public Output<ImmutableArray<Outputs.ServiceGroupTcp>> Tcp { get; private set; } = null!;

        [Output("udp")]
        public Output<ImmutableArray<Outputs.ServiceGroupUdp>> Udp { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceGroup(string name, ServiceGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("xyz:resources:ServiceGroup", name, args ?? new ServiceGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("xyz:resources:ServiceGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ServiceGroup(name, id, options);
        }
    }

    public sealed class ServiceGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("icmp")]
        private InputList<Inputs.ServiceGroupIcmpArgs>? _icmp;
        public InputList<Inputs.ServiceGroupIcmpArgs> Icmp
        {
            get => _icmp ?? (_icmp = new InputList<Inputs.ServiceGroupIcmpArgs>());
            set => _icmp = value;
        }

        [Input("icmp6")]
        private InputList<Inputs.ServiceGroupIcmpArgs>? _icmp6;
        public InputList<Inputs.ServiceGroupIcmpArgs> Icmp6
        {
            get => _icmp6 ?? (_icmp6 = new InputList<Inputs.ServiceGroupIcmpArgs>());
            set => _icmp6 = value;
        }

        [Input("tcp")]
        private InputList<Inputs.ServiceGroupTcpArgs>? _tcp;
        public InputList<Inputs.ServiceGroupTcpArgs> Tcp
        {
            get => _tcp ?? (_tcp = new InputList<Inputs.ServiceGroupTcpArgs>());
            set => _tcp = value;
        }

        [Input("udp")]
        private InputList<Inputs.ServiceGroupUdpArgs>? _udp;
        public InputList<Inputs.ServiceGroupUdpArgs> Udp
        {
            get => _udp ?? (_udp = new InputList<Inputs.ServiceGroupUdpArgs>());
            set => _udp = value;
        }

        public ServiceGroupArgs()
        {
        }
        public static new ServiceGroupArgs Empty => new ServiceGroupArgs();
    }
}
